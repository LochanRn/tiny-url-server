// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/LochanRn/tiny-url-api/gen/models"
)

// V1TinyurlRedirectFoundCode is the HTTP code returned for type V1TinyurlRedirectFound
const V1TinyurlRedirectFoundCode int = 302

/*
V1TinyurlRedirectFound Redirect to the original URL

swagger:response v1TinyurlRedirectFound
*/
type V1TinyurlRedirectFound struct {
	/*Original URL

	 */
	Location string `json:"Location"`
}

// NewV1TinyurlRedirectFound creates V1TinyurlRedirectFound with default headers values
func NewV1TinyurlRedirectFound() *V1TinyurlRedirectFound {

	return &V1TinyurlRedirectFound{}
}

// WithLocation adds the location to the v1 tinyurl redirect found response
func (o *V1TinyurlRedirectFound) WithLocation(location string) *V1TinyurlRedirectFound {
	o.Location = location
	return o
}

// SetLocation sets the location to the v1 tinyurl redirect found response
func (o *V1TinyurlRedirectFound) SetLocation(location string) {
	o.Location = location
}

// WriteResponse to the client
func (o *V1TinyurlRedirectFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Location

	location := o.Location
	if location != "" {
		rw.Header().Set("Location", location)
	}

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(302)
}

// V1TinyurlRedirectInternalServerErrorCode is the HTTP code returned for type V1TinyurlRedirectInternalServerError
const V1TinyurlRedirectInternalServerErrorCode int = 500

/*
V1TinyurlRedirectInternalServerError Internal Server Error

swagger:response v1TinyurlRedirectInternalServerError
*/
type V1TinyurlRedirectInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.V1InternalServerError `json:"body,omitempty"`
}

// NewV1TinyurlRedirectInternalServerError creates V1TinyurlRedirectInternalServerError with default headers values
func NewV1TinyurlRedirectInternalServerError() *V1TinyurlRedirectInternalServerError {

	return &V1TinyurlRedirectInternalServerError{}
}

// WithPayload adds the payload to the v1 tinyurl redirect internal server error response
func (o *V1TinyurlRedirectInternalServerError) WithPayload(payload *models.V1InternalServerError) *V1TinyurlRedirectInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v1 tinyurl redirect internal server error response
func (o *V1TinyurlRedirectInternalServerError) SetPayload(payload *models.V1InternalServerError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V1TinyurlRedirectInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
V1TinyurlRedirectDefault generic error response

swagger:response v1TinyurlRedirectDefault
*/
type V1TinyurlRedirectDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.V1DomainsShorternedDefaultBody `json:"body,omitempty"`
}

// NewV1TinyurlRedirectDefault creates V1TinyurlRedirectDefault with default headers values
func NewV1TinyurlRedirectDefault(code int) *V1TinyurlRedirectDefault {
	if code <= 0 {
		code = 500
	}

	return &V1TinyurlRedirectDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the v1 tinyurl redirect default response
func (o *V1TinyurlRedirectDefault) WithStatusCode(code int) *V1TinyurlRedirectDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the v1 tinyurl redirect default response
func (o *V1TinyurlRedirectDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the v1 tinyurl redirect default response
func (o *V1TinyurlRedirectDefault) WithPayload(payload *models.V1DomainsShorternedDefaultBody) *V1TinyurlRedirectDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v1 tinyurl redirect default response
func (o *V1TinyurlRedirectDefault) SetPayload(payload *models.V1DomainsShorternedDefaultBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V1TinyurlRedirectDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
